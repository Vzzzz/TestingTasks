Как выявить рак легких при помощи искусственного интеллекта
Иван Ожиганов Август 17, 2017
  

Как выявить рак легких при помощи искусственного интеллекта

Согласно исследованиям Американского онкологического общества, поражение лёгких — наиболее частая причина смерти от рака. При этом процент выживания при раке лёгких невысок и составляет 17% для мужчин и 24% для женщин. Печальная статистика объясняется большим числом случаев диагностики рака лёгких на последней стадии.

Если бы рак лёгких находили раньше, число выздоровевших пациентов стало бы выше. В мыслях об этом учёные всего мира пробуют усовершенствовать методы лучевой диагностики рака, включая компьютерную томографию (КТ). Однако развитие способов диагностики не гарантирует, что рак будет легко обнаружен.

Для распознавания опухолевых клеток необходимо правильно обрабатывать снимки и уметь выявлять признаки заболевания. Это вызывает сложности при большом количестве изображений, которые обрабатываются вручную. На помощь врачам-радиологам приходит искусственный интеллект.

AI-алгоритмы для анализа медицинских изображений
В 2017 году популярный медиапортал для радиологов AuntMinnie.com опубликовал обзор по использованию исскусственного интеллекта в радиологии. По словам профессиональных докторов и профессоров медицины из университета Мэриленда и клиники Мэйо, AI-технологии пока не способны заменить рентгенологов и радиологов, но могут оптимизировать рабочие процессы. Например, методы машинного обучения помогают эффективно анализировать медицинские изображения. А именно — находить опухоли на снимках КТ, магнитно-резонансной томографии (МРТ) и позитронно-эмиссионной томографии (ПЭТ).

Преимущества автоматической обработки медицинских снимков очевидны:

Болезнь можно диагностировать быстрее
Врачи получают удобный программный инструмент
Снижается процент ошибок при обработке данных
Мы разрабатываем ПО для медицинских организаций с 2012 года и понимаем, как важно адаптировать технологии машинного обучения для практических целей. В рамках одного из текущих проектов мы обратились к проблеме ранней диагностики рака лёгких и разработали алгоритм анализа медицинских снимков для выявления признаков рака.

Кому это пригодится
Медицинским учреждениям — частным и государственным, научным исследовательским центрам, профессорам, специализирующимся на исследовании методов диагностики рака лёгких, практикующим специалистам-рентгенологам и радиологам.

Как это действует
Алгоритм компьютерного зрения распознаёт опухолевые образования на снимках лёгких с помощью применения искусственных нейронных сетей. Обученная нами нейросеть ищет солитарные лёгочные узлы — подозрительные участки в лёгких, которые могут быть опухолевыми клетками.

Исходное изображение легких, срез в плоскости

Как мы это сделали
Мы обучили нейросеть искать области, напоминающие солитарные лёгочные узлы, на выборке из 1000 размеченных КТ-снимков органов грудной клетки:

1. Мы разделили КТ-снимки лёгких на две группы: подозрительные и нормальные. Затем натренировали нейросеть U-Net находить на снимках признаки опухоли по подозрительным областям. Сеть показала хорошие результаты в локализации подозрительных областей, но демонстрировала и ложные срабатывания — кроме правильно выбранных опухолей, сеть выделяла лишние сегменты снимков.

Архитектура сети U-Net

2. Чтобы улучшить качество работы нейросети U-Net, мы решили сократить число ложных срабатываний. Для этого мы обучили 3D свёрточную нейронную сеть классифицировать найденные на первом этапе подозрительные области на верные и ложные. В результате точность корректного выбора выросла и составила 0,925.

Почему это работает
Полученный алгоритм автоматически разделяет КТ-снимки лёгких на два типа: подозрительный и нормальный. Кроме этого, нейросеть легко локализует подозрительную область на снимках. Это работает благодаря высокой способности нейронных сетей обучаться на распознавание как 2D, так и 3D изображений. Чем больше исходный массив данных, тем выше качество работы алгоритма.

Разделение КТ-снимков легких

AI-алгоритм не ограничивается только распознаванием раковых опухолей. Его можно натренировать на распознавание других заболеваний на КТ-снимках в зависимости от задачи, поставленной доктором. Так можно обучить полученную модель диагностировать внутренние кровотечения и повреждения организма. Высокая точность работы нейросетей позволяет надеяться на их широкое применение в медицине.



OCR для распознавания документов и автоматического ввода данных
Иван Ожиганов Июль 6, 2017
  
Share
OCR для распознавания документов и автоматического ввода данных

Арнольд работает страховым консультантом. Ежедневно он тратит 2 часа на правку отчетов и оформление страховых полисов. Агентов в фирме много, но всех объединяет одна проблема: слишком много ручной работы. Время, потраченное на набор текста и исправление ошибок, лучше потратить на общение с клиентами или развитие новых навыков. Все это негативно отражается на бизнесе.

Чтобы оптимизировать работу, сократите бессмысленный ручной труд. В этом поможет OCR.

Что такое OCR?
Оптическое распознавание символов или OCR — это технология для переноса бумажного документа или цифрового изображения в текстовый документ, который легко читать, копировать и редактировать.

OCR пригодится там, где нужно обрабатывать большие объемы текста или работать с бумажными носителями. Страховые компании, банки, государственные учреждения, транспортные компании. Все, кто хочет извлечь текст из изображения, могут делать это проще и быстрее.

Как это работает?
Потребуется цифровое изображение или бумажная распечатка. Специальная программа распознает текст на бумаге или изображении и переводит его в редактируемый текст. Дальше — полная свобода действий и минимум потраченного времени.

Для компании Арнольда мы разработали специальный алгоритм обработки паспортов и водительских прав. Страховые агенты просто фотографируют нужный документ на телефон. Программа сама заполняет ФИО, серию, номер паспорта и другие поля заявления.

Автозаполнение документов

В чем выражается польза?
Вы работаете быстрее
Раньше на оформление страховки требовалось 15-20 минут. С помощью нашего OCR-софта все решается за 5 минут и 3 простых шага:

Сотрудник фотографирует документ
Поля электронного заявления заполняются автоматически
Быстро проверяет текст на наличие ошибок
Вы работаете с удовольствием
Чем меньше рутинной работы, тем лучше. Монотонное печатание утомляет. Просто наведите камеру телефона на паспорт, права или любой другой документ. Программа распознает текст и автоматически заполнит необходимые поля.

Так Арнольд и его коллеги перестали тратить время на ручную печать и освободили время для настоящей работы.

Как мы распознавали документы для страховой компании
Рассказываем, как работаем над алгоритмами распознавания текста. С небольшими изменениями процесс общий для обработки любых бумажных документов. Указанные ниже методы мы использовали для распознавания паспорта и водительских прав.

Локализация
Фильтрация
Извлечение строк
Распознавание текста по символам или по строкам
Локализация
Это нахождение документа на изображении. Для локализации мы пробовали три основных подхода:

OpenCV и обученный классификатор Хаара
Полносверточные нейронные сети
Аналитический подход на основе поиска связных компонент
В первом подходе документ помечается прямоугольником и обрезается до тех пор, пока в рамке не останется выделенной область с текстом; если документ на видео не найден, то алгоритм продолжает поиск в видеопотоке.

Во втором подходе мы применяем полносверточные нейронные сети. На вход сети подается цветное изображение паспорта. На выходе формируется два канала: первый используется для поиска центра первой страницы паспорта, второй - для поиска центра второй страницы. При этом сеть тренируется предсказывать маску, в которой над центрами страниц паспорта находятся гауссовы пики.

Натренированная нейронная сеть

Третий подход мы применили для распознавания паспорта. Использовали шаблон, где на развороте паспорта находились две области с серией и номером документа. Если такой шаблон в кадре, то перед нами паспорт. В основе данного подхода лежит поиск связанных компонент. Смотрите видео ниже.



Фильтрация
Фон документов ламинированный, с бликами света и водяными знаками. Для нейронной сети все это - шум, который мешает распознавать символы. Поэтому мы этот шум постарались убрать. Для этого использовали:

Алгоритм фильтрации шума fastNlMeansDenoisingColored с окном подходящего размера для затирания линий
Билатеральный фильтр для получения однородного фона
Метод адаптивной бинаризации
Извлечение строк
Для водительских прав мы применили OpenCV и детектировали контуры букв.Затем мы разбивали строки на буквы, которые потом подавали на вход нейронной сети для распознавания.

Детектирование контуров букв и разбиение строк на буквы

Для извлечения строк паспорта мы применили полносверточную нейронную сеть.

Распознавание текста
Для распознавания текста мы использовали нейронные сети. Текст на правах мы распознавали по буквам с помощью сверточной нейронной сети, обученной на большом датасете изображений букв. Для создания и обучения нейронной сети мы использовали фреймворк Torch.

Текст в паспорте также распознавали с помощью полносверточной нейронной сети. Регистр буквы при распознавании не учитывается. Для обучения сети мы подготовили специальный скрипт — генератор обучающей выборки:

Схема работы скрипта

1. Водительское удостоверение

2. Камера

3. Исполняемый бинарный файл

4. Исходные коды C++, из которых собран исполняемый файл

5. Lua скрипт, осуществляющий работу с нейросетью. В нем описана архитектура сети.

6. Бинарный файл с весами сети, подгружаемый Lua скриптом. Веса получены после обучения сети

Почему вашему бизнесу нужны наши алгоритмы распознавания текста
Комбинируя различные подходы, мы добились точности распознавания 90%. Это больше, чем предлагают доступные на рынке инструменты.

Высокая точность достигается за счет специализированного подхода. Мы проверяем множество гипотез и выбираем то, что работает лучше для конкретной бизнес-задачи.



Применение LSTM сети для обработки сигналов акселерометра
Иван Ожиганов Апрель 13, 2017
  
Share
6
применение LSTM сети для обработки сигналов акселерометра

Наверняка вы не понаслышке знакомы с автоповоротом экрана смартфонов. А любители мобильных игр часто управляют движениями в игре с помощью поворотов телефона. Такую возможность обеспечивает специальное устройство – акселерометр. Он определяет ускорение объекта, в который он встроен. Благодаря акселерометру современные исследователи собирают данные о характере перемещения мобильного устройства, чтобы узнать, как движется его владелец. Эта информация может пригодиться для разработки ПО в различных областях – от обеспечения безопасности до геолокационных сервисов.

Но как автоматизировать и систематизировать обработку данных, полученных с акселерометра смартфона?

Чтобы ответить на этот вопрос, мы решили на практике испытать различные модели LSTM сети для обработки сигналов, полученных с акселерометра смартфона.

Цель исследования: проверить возможность применения LSTM сети для обработки сигналов, полученных с акселерометра смартфона, и определения типа движения мобильного объекта.

Обзор исследования:

Постановка основной гипотезы исследования
Визуальный анализ собранных данных
Обучение нейронной сети LSTM
Описание результатов тестирования LSTM сети на тестовом мобильном приложении
Постановка основной гипотезы исследования
В теории акселерометр – это устройство, измеряющее сумму ускорения объекта и гравитационного ускорения. Простейший акселерометр представляет собой груз, подвешенный на пружине и поддерживаемый с другой стороны для подавления колебаний. В смартфоне он реализован с помощью MEMS микросхем.

модель простого акселерометра

Рис. 1. Модель простого акселерометра

Акселерометры бывают однокомпонентные, двухкомпонентные, трёхкомпонентные и могут измерять ускорение вдоль одной, двух и трёх осей соответственно. В смартфон встроен трёхкомпонентный акселерометр.

В рамках текущей задачи мы использовали акселерометр для того, чтобы определить двигается смартфон или нет, а также понять с какой скоростью.

Когда придаёшь смартфону ускорение – например, поднимаешь его со стола или водишь в воздухе – пружины в акселерометре растягиваются и сжимаются определённым образом. Учитывая особенности движения смартфона, мы сформулировали главную гипотезу исследования.

Основная гипотеза: если смартфон находится в кармане у движущегося человека, при движении смартфону передаются повторяющиеся колебания, и это отражается на показаниях акселерометра.

Визуальный анализ собранных данных
Опираясь на основную гипотезу, мы провели визуальный анализ полученных данных.

данные с акселерометра по трем осям - Прогулка 1

Рис. 2. Данные с акселерометра по трём осям (Прогулка 1)

данные с акселерометра по трем осям - Прогулка 2

Рис. 3. Данные с акселерометра по трём осям (Прогулка 2)

данные с акселерометра по трем осям - Прогулка 3

Рис. 4. Данные с акселерометра по трём осям (Прогулка 3)

По данным можно отследить следующую закономерность: в момент шага происходит колебание большой амплитуды, которое потом гаснет до следующего шага. Данный паттерн повторяется на всех графиках:

Прогулка 1. В диапазоне от ~600 до 1300
Прогулка 2. В диапазоне от ~ 500 до 1300
Прогулка 3. В диапазоне от ~ 300 до 1500
Однако на формирование сигнала влияют разные факторы, которые могут вносить дополнительный шум: например, телефон может находиться в кармане брюк или в куртке, или лежать в различном положении. В таком случае графики всех трех осей для одинаковой модели движения объекта выглядят по-разному, как и отражено на рисунках.

На графике показаний акселерометра по оси Y видно, что телефон в разных экспериментах был расположен по-разному. Поэтому требовалось найти характеристику, которая не зависит от положения самого смартфона и при этом демонстрирует определенный паттерн при различных типах движения человека. В качестве такой характеристики была выбрана длина вектора, проведенного из начала координат к точке с координатами X, Y, Z, полученных с акселерометра.

Прогулка 1: данные с акселерометра по трём осям и график колебаний длины амплитуды вектора

Рис. 5. Прогулка 1: данные с акселерометра по трём осям и график колебаний длины амплитуды вектора

Прогулка 2: данные с акселерометра по трём осям и график колебаний длины амплитуды вектора

Рис. 6. Прогулка 2: данные с акселерометра по трём осям и график колебаний длины амплитуды вектора

Прогулка 3: данные с акселерометра по трём осям и график колебаний длины амплитуды вектора

Рис. 7. Прогулка 3: данные с акселерометра по трём осям и график колебаний длины амплитуды вектора

На графике видно, что длина вектора не зависит от положения смартфона.

Обучение нейронной сети LSTM
Для решения задачи был сформирован датасет, разделенный на обучающую и тестовую выборки. Далее мы приступили к обучению искусственной нейронной сети LSTM.

Структура слоёв сети у всех моделей общая: вектор входных данных поступает на LSTM слой, после которого сигнал переходит уже на полносвязный слой, где и формируется ответ. Более подробную информацию об описании LSTM слоя можно найти, например, на сайте фреймворка Lasagne.

Для получения оптимальной модели мы написали скрипт, который создавал новые модели, изменяя количество входов в нейронные сети и количество LSTM элементов. Модель каждого вида создавалась и обучалась заново несколько раз, для того чтобы избежать попадания в локальный минимум при использовании решателя и нахождения оптимального набора весов сети.

Все модели реализованы на языке Python с использованием фреймворков Theano и Lasagne. Также был использован решатель Adam. Отличия моделей друг от друга – в размере входного вектора данных и количестве LSTM элементов в сети.

Полученные модели были протестированы с помощью тестового Android приложения.

Для запуска решения под Android были выбраны следующие библиотеки:

JBLAS – библиотека линейной алгебры, основанной на BLAS (Basic Linear Algebra Subprograms)
JAMA (Java Matrix Package)
Библиотека JBLAS выдала ошибку при запуске программы на архитектуре arm64. В итоге решение было реализовано при помощи библиотеки JAMA.

Результаты тестирования LSTM сети на тестовом мобильном приложении
Результаты тестирования нейронной сети LSTM показали, что с задачами обработки сигналов акселерометра данные модели справляются хорошо.

результаты тестирования моделей

Рис. 8. Результаты тестирования моделей (см. Таблица)

Например, с помощью таких моделей можно определять тип движения объекта: покой, шаг, езда и пр. Это объясняется тем, что в колебаниях длины вектора, полученного по данным акселерометра во время движения или покоя, существует определенный паттерн.

В случае шага или покоя паттерн очень хорошо различим. В случае проезда на транспорте (метро, автобус, автомобиль) точность снижается, поскольку разные факторы мешают корректному определению состояния человека.

результаты тестирования моделей по данным акселерометра, собранным на пешей прогулке и во время поездки на автобусе

Рис. 9. Результаты тестирования моделей по данным акселерометра, собранным на пешей прогулке и во время поездки на автобусе

Как правило, человек в транспорте не двигается, а, следовательно, большая часть пути будет отражаться состоянием покоя. Однако если человек находится в транспорте, который трясет, то вибрация может передаваться на смартфон, в результате чего сеть будет определять тип движения как “транспорт”. В случае автомобиля телефон может быть закреплен на панели управления и можно предположить, что паттерн “транспорт” будет лучше различим.

